# ============================
# General behavior
# ============================
[general]

# Logging level
#   "DEBUG"    → troubleshooting and debugging
#   "INFO"     → general operation logging (default)
#   "WARN"     → unexpected behavior but program still works
#   "ERROR"    → serious issues that will prevent the program from running correctly
#   "CRITICAL" → something has gone horribly wrong, program cannot continue to run
log_level = "DEBUG"

# Where logger outputs
#   "file" → to file only
#   "console" → to terminal only
#   "both" → to file and terminal
log_output = "file"

# If true, all matches are case-insensitive.
#   Example: "fault spare 3" == "FAULT SPARE 3"
case_insensitive = true

# How regexes should match:
#   "fullmatch" → pattern must match the entire string
#   "search"    → pattern can match anywhere inside the string
regex_match = "fullmatch"

# Toggle to bypass regex
regex_bypass = false


# ============================
# Allowlist
# ============================
[allow]

# Exact lines that should be *kept* even if they match a noise pattern.
# Good for special SPARE lines you actually want to preserve.
# Examples:
#   "ALARM PL SPARE"
#   "R/B ALARM SPARE"
exact = ["LAMP CHECK"]

# Regex patterns that should be *kept* even if they match a noise pattern.
# Example below allows any "FAULT SCREEN FAULT 5*7" lines.
regex = ["^FAULT SCREEN FAULT 5[A-E]7$"]


# ============================
# Denylist
# ============================
[deny]

# Exact lines that should always be dropped, even if they don’t match noise.
exact = []

# Regex patterns that should always be dropped, even if they don’t match noise.
regex = []


# ============================
# Noise patterns
# ============================
[noise]

# A list of regexes that describe “junk” comments you want to filter out.
# Each line is tested; if it matches any of these, it’s dropped (unless in [allow]).
patterns = [
  # Grid addresses like "FAULT5A7" or "FAULT 5A7"
  "FAULT\\s?\\d[A-Z]\\d",

  # Lines such as "...FAULT SPARE 12"
  ".*FAULT SPARE \\d{1,2}$",

  # Generic FAULT descriptions, e.g., "OTHER FAULT TOTAL"
  "(?:\\b(?:TOTAL|OTHER)\\s+)?FAULT(?:\\s+\\w+)?(?:\\s+FAULT)?\\s+\\w+",
]

# ============================
# Regex Pattern Character Reference
# ============================

# \d → digit (same as [0-9]).

# \D → non-digit.

# \w → word character: letter, digit, or underscore (same as [A-Za-z0-9_]).

# \W → non-word character.

# \s → whitespace (space, tab, newline, etc.).

# \S → non-whitespace.
